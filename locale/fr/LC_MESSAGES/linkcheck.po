# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR Free Software Foundation, Inc.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2000-06-03 14:59+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: ENCODING\n"

#: linkcheck/Logging.py:134 linkcheck/Logging.py:226
msgid ""
"\n"
"Thats it. "
msgstr ""

#: linkcheck/Logging.py:95 linkcheck/Logging.py:179 linkcheck/Logging.py:282
msgid " (cached)\n"
msgstr ""

#: linkcheck/Logging.py:143 linkcheck/Logging.py:234
msgid " errors"
msgstr " erreurs"

#: linkcheck/Logging.py:144 linkcheck/Logging.py:235
msgid " found.\n"
msgstr ""

#: linkcheck/Logging.py:139 linkcheck/Logging.py:230
msgid " avertissements, "
msgstr ""

#: linkcheck/Logging.py:489
msgid "# Format of the entries:\n"
msgstr ""

#: linkcheck/Logging.py:355 linkcheck/Logging.py:487
#, c-format
msgid "# Get the newest version at %s\n"
msgstr ""

#: linkcheck/Logging.py:396 linkcheck/Logging.py:527
#, c-format
msgid "# Stopped checking at %s (%.3f seconds)\n"
msgstr ""

#: linkcheck/Logging.py:356 linkcheck/Logging.py:488
#, c-format
msgid ""
"# Write comments and bugs to %s\n"
"\n"
msgstr ""

#: linkcheck/Logging.py:353 linkcheck/Logging.py:485
#, c-format
msgid "# created by %s at %s\n"
msgstr ""

#: linkcheck/Logging.py:197 linkcheck/Logging.py:202 linkcheck/Logging.py:301
#: linkcheck/Logging.py:306
#, c-format
msgid "%.3f seconds"
msgstr ""

#: linkcheck/Logging.py:108 linkcheck/Logging.py:111
#, c-format
msgid "%.3f seconds\n"
msgstr ""

#: linkcheck/Logging.py:100 linkcheck/Logging.py:280
msgid ", line "
msgstr ""

#: linkcheck/Logging.py:414
#, c-format
msgid "-- Get the newest version at %s\n"
msgstr ""

#: linkcheck/Logging.py:443
#, c-format
msgid "-- Stopped checking at %s (%.3f seconds)\n"
msgstr ""

#: linkcheck/Logging.py:415
#, c-format
msgid ""
"-- Write comments and bugs to %s\n"
"\n"
msgstr ""

#: linkcheck/Logging.py:412
#, c-format
msgid "-- created by %s at %s\n"
msgstr ""

#: linkcheck/Logging.py:141 linkcheck/Logging.py:232
msgid "1 error"
msgstr ""

#: linkcheck/Logging.py:137 linkcheck/Logging.py:228
msgid "1 warning, "
msgstr ""

#: linkcheck/HttpUrlData.py:75
msgid "Access denied by robots.txt, checked only syntax"
msgstr ""

#: linkcheck/Logging.py:103 linkcheck/Logging.py:189 linkcheck/Logging.py:289
msgid "Base"
msgstr ""

#: linkcheck/Logging.py:110 linkcheck/Logging.py:200 linkcheck/Logging.py:305
msgid "Check Time"
msgstr ""

#: linkcheck/Logging.py:107 linkcheck/Logging.py:196 linkcheck/Logging.py:300
msgid "D/L Time"
msgstr ""

#: linkchecker:102
msgid ""
"EXAMPLES\n"
"o linkchecker -v -o html -r2 -s -i treasure.calvinsplayground.de \\\n"
"    http://treasure.calvinsplayground.de/~calvin/ > sample.html\n"
"o Local files and syntactic sugar on the command line:\n"
"      linkchecker c:\\temp\\test.html\n"
"      linkchecker ../bla.html\n"
"      linkchecker www.myhomepage.de\n"
"      linkchecker -r0 ftp.linux.org\n"
msgstr ""

#: linkcheck/HttpUrlData.py:115
#, c-format
msgid "Effective URL %s"
msgstr ""

#: linkcheck/UrlData.py:50 linkcheck/UrlData.py:68
msgid "Error"
msgstr ""

#: linkchecker:125
#, c-format
msgid "Error: %s\n"
msgstr ""

#: linkchecker:126
msgid "Execute 'linkchecker -h' for help\n"
msgstr ""

#: linkcheck/Logging.py:86 linkcheck/Logging.py:242
#, c-format
msgid "Get the newest version at %s\n"
msgstr ""

#: linkcheck/FtpUrlData.py:34
msgid "Got no answer from FTP server"
msgstr ""

#: linkcheck/NntpUrlData.py:41
#, c-format
msgid "Group %s has %s articles, range %s to %s"
msgstr ""

#: linkcheck/HttpUrlData.py:119
msgid "HTTP 301 (moved permanent) encountered: you should update this link"
msgstr ""

#: linkcheck/HttpsUrlData.py:44
msgid "HTTPS url ignored"
msgstr ""

#: linkcheck/NntpUrlData.py:31
msgid "Illegal NNTP link syntax"
msgstr ""

#: linkchecker:205 linkchecker:213 linkchecker:244
#, c-format
msgid "Illegal argument '%s' for option "
msgstr ""

#: linkcheck/TelnetUrlData.py:32
msgid "Illegal telnet link syntax"
msgstr ""

#: linkcheck/Logging.py:113 linkcheck/Logging.py:205 linkcheck/Logging.py:310
#: linkcheck/Logging.py:314
msgid "Info"
msgstr ""

#: linkcheck/JavascriptUrlData.py:25
msgid "Javascript url ignored"
msgstr ""

#: linkcheck/HttpUrlData.py:73
msgid "Missing '/' at end of URL"
msgstr ""

#: linkchecker:87
msgid ""
"NOTES\n"
"o LinkChecker assumes an http:// resp. ftp:// link when a commandline URL\n"
"  starts with 'www.' resp. 'ftp.'\n"
"  You can also give local files as arguments\n"
"o If you have your system configured to automatically establish a\n"
"  connection to the internet (e.g. with diald), it will connect when\n"
"  checking links not pointing to your local host\n"
"  Use the -s and -i options to prevent this (see EXAMPLES)\n"
"o Javascript links are currently ignored\n"
"o If your platform does not support threading, LinkChecker uses -t0\n"
"o You can supply multiple user/password pairs in a configuration file\n"
"o Cookies are not accepted by LinkChecker\n"
"o When checking 'news:' links the given NNTP host doesn't need to be the\n"
"  same as the host of the user browsing your pages!\n"
msgstr ""

#: linkcheck/NntpUrlData.py:37
msgid "No NNTP server specified, checked only syntax"
msgstr ""

#: linkcheck/MailtoUrlData.py:66
msgid "No adresses found"
msgstr ""

#: linkcheck/MailtoUrlData.py:91
#, c-format
msgid "None of the mail hosts for %s accepts an SMTP connection: %s"
msgstr ""

#: linkcheck/Logging.py:99 linkcheck/Logging.py:183 linkcheck/Logging.py:264
msgid "Parent URL"
msgstr ""

#: linkcheck/Logging.py:105 linkcheck/Logging.py:192 linkcheck/Logging.py:295
msgid "Real URL"
msgstr ""

#: linkcheck/Logging.py:124 linkcheck/Logging.py:214 linkcheck/Logging.py:218
#: linkcheck/Logging.py:328
msgid "Result"
msgstr ""

#: linkcheck/Logging.py:88 linkcheck/Logging.py:165
#, c-format
msgid "Start checking at %s\n"
msgstr ""

#: linkcheck/Logging.py:146 linkcheck/Logging.py:237
#, c-format
msgid "Stopped checking at %s (%.3f seconds)\n"
msgstr ""

#: linkcheck/Logging.py:93 linkcheck/Logging.py:278
msgid "URL"
msgstr ""

#: linkcheck/UrlData.py:125
msgid "URL is null or empty"
msgstr ""

#: linkchecker:16
#, c-format
msgid ""
"USAGE\tlinkchecker [options] file_or_url...\n"
"\n"
"OPTIONS\n"
"-a, --anchors\n"
"        Check anchor references. Default is don't check anchors.\n"
"-D, --debug\n"
"        Print additional debugging information.\n"
"-e regex, --extern=regex\n"
"        Assume urls that match the given expression as extern.\n"
"        Only intern HTTP links are checked recursively.\n"
"-f file, --config=file\n"
"        Use file as configuration file. LinkChecker first searches\n"
"        ~/.linkcheckerrc and then /etc/linkcheckerrc\n"
"        (under Windows <path-to-program>\\linkcheckerrc).\n"
"-F name, --file-output=name\n"
"        Same as output, but write to a file linkchecker-out.<name>.\n"
"        If the file already exists, it is overwritten. You can specify\n"
"        this option more than once. There is no file output for the\n"
"        blacklist logger. Default is no file output.\n"
"-i regex, --intern=regex\n"
"        Assume urls that match the given expression as intern.\n"
"-h, --help\n"
"        Help me! Print usage information for this program.\n"
"-l, --allowdeny\n"
"        Swap checking order to intern/extern. Default checking order\n"
"        is extern/intern.\n"
"-N, --nntp-server\n"
"        Specify an NNTP server for 'news:...' links. Default is the\n"
"        environment variable NNTP_SERVER. If no host is given,\n"
"        only the syntax of the link is checked.\n"
"-o name, --output=name\n"
"        Specify output as %s.\n"
"        Default is text.\n"
"-p pwd, --password=pwd\n"
"        Try given password for HTML and FTP authorization.\n"
"        Default is 'guest@'. See -u.\n"
"-P host[:port], --proxy=host[:port]\n"
"        Use specified proxy for HTTP requests.\n"
"        Standard port is 8080. Default is to use no proxy.\n"
"-q, --quiet\n"
"        Quiet operation. This is only useful with -F.\n"
"-r depth, --recursion-level=depth\n"
"        Check recursively all links up to given depth (depth >= 0).\n"
"        Default depth is 1.\n"
"-R, --robots-txt\n"
"        Obey the robots exclusion standard.\n"
"-s, --strict\n"
"        Check only syntax of extern links, do not try to connect to them.\n"
"-t num, --threads=num\n"
"        Generate no more than num threads. Default number of threads is 5.\n"
"        To disable threading specify a non-positive number.\n"
"-u name, --user=name\n"
"        Try given username for HTML and FTP authorization.\n"
"        Default is 'anonymous'. See -p.\n"
"-V, --version\n"
"        Print version and exit.\n"
"-v, --verbose\n"
"        Log all checked URLs (implies -w). Default is to log only invalid\n"
"        URLs.\n"
"-w, --warnings\n"
"        Log warnings.\n"
"-W regex, --warning-regex=regex\n"
"        Define a regular expression which prints a warning if it matches\n"
"        any content of the checked link.\n"
"        This applies of course only to pages which are valid, so we can\n"
"        get their content.\n"
"        You can use this to check for pages that contain some form of\n"
"        error message, for example 'This page has moved' or\n"
"        'Oracle Application Server error'.\n"
"        This option implies -w.\n"
msgstr ""

#: linkcheck/UrlData.py:51 linkcheck/UrlData.py:72
msgid "Valid"
msgstr ""

#: linkcheck/Logging.py:119 linkcheck/Logging.py:210 linkcheck/Logging.py:323
msgid "Warning"
msgstr ""

#: linkcheck/Logging.py:244
#, c-format
msgid "Write comments and bugs to %s\n"
msgstr ""

#: linkcheck/Logging.py:87
#, c-format
msgid ""
"Write comments and bugs to %s\n"
"\n"
msgstr ""

#: linkcheck/MailtoUrlData.py:107
msgid "could not split the mail adress"
msgstr ""

#: linkcheck/HostCheckingUrlData.py:44
msgid "found"
msgstr ""

#: linkcheck/MailtoUrlData.py:96
#, c-format
msgid "found mail host %s"
msgstr ""

#: linkcheck/UrlData.py:148
msgid "outside of domain filter, checked only syntax"
msgstr ""

#: linkcheck/RobotsTxt.py:94
#, c-format
msgid "robots.txt:%d: allow without user agents"
msgstr ""

#: linkcheck/RobotsTxt.py:85
#, c-format
msgid "robots.txt:%d: disallow without user agents"
msgstr ""

#: linkcheck/RobotsTxt.py:77
#, c-format
msgid "robots.txt:%d: user-agent in the middle of rules"
msgstr ""

#: linkchecker:289
msgid "warning: no files or urls given"
msgstr ""
